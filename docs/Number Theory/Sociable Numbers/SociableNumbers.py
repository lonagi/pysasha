#!/usr/bin/env python
# coding: utf-8

# # –ö–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞. –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ

# ### #–ó–∞–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞—è –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
# 
# #### –í–µ—Å—å –∫–æ–¥ –Ω–∞ Github, —Å—Å—ã–ª–∫–∞ –≤ –∫–æ–Ω—Ü–µ —Å—Ç–∞—Ç—å–∏!

# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫

# In[ ]:


from IPython.display import Image
from IPython.core.display import HTML 
from IPython.core.interactiveshell import InteractiveShell
from scipy.ndimage.filters import gaussian_filter1d
from scipy.signal import savgol_filter
import numpy as np
import sympy as sp
import pandas as pd
import random as r
import time
import matplotlib.pyplot as plt
import ipyturtle as turtle
InteractiveShell.ast_node_interactivity = "all"

def drawPlot(ss,title="–°–∫–æ—Ä–æ—Å—Ç–∏",y="–°–µ–∫—É–Ω–¥",x="–ù–æ–º–µ—Ä –∏—Ç–µ—Ä–∞—Ü–∏–∏"):
    fig,ax=plt.subplots(figsize=(6,6))
    ax.set_facecolor("#F2F2F2")
    ax.grid()
    ax.set_title(title)
    ax.set_ylabel(y)
    ax.set_xlabel(x)
    ax.plot(ss)


# In[ ]:


Image(url="https://sun1-92.userapi.com/PBUS51pFNY-XwsB811CUdZtLWQkFnZ6f8xVQGg/Sm3I9V-uiuA.jpg", width=400)


# –ö–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞?  
# –ü—Ä–æ—à–ª–∞—è —Å—Ç–∞—Ç—å—è –±—ã–ª–∞ –ø—Ä–æ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞. –ü–æ–º–Ω–∏–º —á—Ç–æ —ç—Ç–æ?  
# 
# –ï—Å–ª–∏ —á–∏—Å–ª–æ —Ä–∞–∑–ª–æ–∂–∏—Ç—å –Ω–∞ –µ–≥–æ –¥–µ–ª–∏—Ç–µ–ª–∏, –∞ –ø–æ—Ç–æ–º –ø—Ä–æ—Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –∏—Ö, —Ç–æ –≤—ã–π–¥–µ—Ç —Ç–∞–∫–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏ —Ç–æ–π –∂–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–µ—Ä–Ω—ë—Ç –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ.  
# –ù–∞–ø—Ä–∏–º–µ—Ä:  
# –í–æ–∑—å–º—ë–º —á–∏—Å–ª–æ 8. –ï–≥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–µ–ª–∏—Ç–µ–ª–∏ = 4,2,1  
# –°—É–º–º–∞: 4+2+1 = 7   
# –î–µ–ª–∏—Ç–µ–ª–∏ —Å–µ–º–∏: 1 –∏ –≤—Å—ë. –ù–æ 1 + 0, –¥–∞—Å—Ç 1, –∞ –Ω–µ 8. –ü–æ—ç—Ç–æ–º—É —á–∏—Å–ª–∞ 8 –∏ 7 –Ω–µ —è–≤–ª—è—é—Ç—Å—è –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏.  
# 
# –ü–µ—Ä–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–∞—Ä—ã —ç—Ç–æ - (220,284)   
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–º–∏.  
# 
# –û–¥–Ω–∞–∫–æ –¥–æ–ª–∂–µ–Ω –æ—Ç–º–µ—Ç–∏—Ç—å –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ —Ç–µ–º–µ. –õ—é–±–æ–π –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –µ—â—ë —è–≤–ª—è–µ—Ç—Å—è –∏ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–º. –ü–æ—á–µ–º—É?  
# –ö–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞ - —ç—Ç–æ —Ç–∞–∫–∏–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç–∞–¥–∏–π —Ç–∞–∫–∏—Ö –≤–æ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π, –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ –≤—ã—à–µ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞.  
# –ö–∞–∂–¥–æ–µ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–µ —á–∏—Å–ª–æ –æ–±–ª–∞–¥–∞–µ—Ç —Å–≤–æ–∏–º –ø–æ—Ä—è–¥–∫–æ–º, —Ç–∞–∫ —Å–∫–∞–∑–∞—Ç—å.  
# –£ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —á–∏—Å–µ–ª —ç—Ç–æ –ø–æ—Ä—è–¥–æ–∫ —Ä–∞–≤–µ–Ω 2. –ö–∞–∫ –ø–æ–Ω—è—Ç—å?  
# 
# –°–æ–∑–¥–∞–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–µ–ª–∏—Ç–µ–ª–µ–π.

# In[ ]:


def Divisors(num): 
    from math import sqrt as mmsq
    s=set([1])
    i=1
    a=int(mmsq(num)+1)
    while i<=a: 
        if(num//i==num):
            i+=1
            continue
        if (num%i==0): 
            if (num//i!=i): 
                s.add(num//i)
            s.add(i)
        i+=1
    return s


# In[ ]:


Divisors(220)


# –ü—Ä–æ—Å—É–º–º–∏—Ä—É–µ–º

# In[ ]:


sum(Divisors(220))


# –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–µ–ª–∞–Ω–∞ –≤—Å–µ–≥–æ-—Ç–æ 1 —Ä–∞–∑.  
# –∏–∑ 220 –º—ã –ø–æ–ª—É—á–∏–ª–∏ —á–∏—Å–ª–æ 284.  
# 
# –ü–æ–≤—Ç–æ—Ä–∏–º –∞–ª–≥–æ—Ä–∏—Ç–º –µ—â—ë —Ä–∞–∑.

# In[ ]:


Divisors(284)


# In[ ]:


sum(Divisors(284))


# –ò –≤–æ—Ç –º—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å —Å–Ω–æ–≤–∞ –∫ —á–∏—Å–ª—É 220, –∫–æ—Ç–æ—Ä–æ–µ –∏ –±—ã–ª–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ.  
# –î–ª—è —ç—Ç–æ–≥–æ –º—ã –ø—Ä–æ–≤–µ–ª–∏ –Ω–∞—à—É –æ–ø–µ—Ä–∞—Ü–∏—é –¥–≤–∞ —Ä–∞–∑–∞! –ü–æ—ç—Ç–æ–º—É –ø–æ—Ä—è–¥–æ–∫ - –¥–≤–∞.  
# –í –≤–∏–∫–∏–ø–µ–¥–∏–∏ —ç—Ç–æ –Ω–∞–∑—ã–≤–∞—é—Ç –¥–ª–∏–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
# 
# –°–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª –≤ –¥–∞–Ω–Ω–æ–π —Ü–µ–ø–∏ –æ–ø–µ—Ä–∞—Ü–∏–π –∫—Ä–æ–º–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ

# –ï—Å—Ç—å –∏ –¥—Ä—É–≥–∏–µ –¥–ª–∏–Ω—ã. –ù–∞–ø—Ä–∏–º–µ—Ä –µ—Å–ª–∏ –¥–ª–∏–Ω–∞ –±—É–¥–µ—Ç —Ä–∞–≤–Ω–∞ 1, —Ç–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —á—Ç–æ —É –Ω–∞—Å —Å—É–º–º–∞ —Å–æ–±—Å.–¥–µ–ª–∏—Ç–µ–ª–µ–π —á–∏—Å–ª–∞ –≤–µ—Ä–Ω—ë—Ç —Å—Ä–∞–∑—É –µ–≥–æ –∂–µ.   
# –¢–∞–∫–∏–µ —á–∏—Å–ª–∞ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è **—Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã–µ**, –Ω–æ –æ –Ω–∏—Ö –±—É–¥–µ—Ç —Å—Ç–∞—Ç—å—è –ø–æ–∑–∂–µ üòÅ

# –í —Ü–µ–ª–æ–º –¥–ª–∏–Ω—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π –º–æ–≥—É—Ç –±—ã—Ç—å —Å–æ–≤—Å–µ–º —Ä–∞–∑–Ω—ã–µ.  
# –û—Ç 1 –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏.

# –ù–∞–ø—Ä–∏–º–µ—Ä, –≤–æ–∑—å–º—ë–º —á–∏—Å–ª–æ 1264460

# In[ ]:


sum(Divisors(1264460))


# In[ ]:


sum(Divisors(1547860))


# In[ ]:


sum(Divisors(1727636))


# In[ ]:


sum(Divisors(1305184))


# –ò –≤–æ—Ç –º—ã –ø–æ–ª—É—á–∏–ª–∏ –≤ –∫–æ–Ω—Ü–µ —Ç–æ–∂–µ —Å–∞–º–æ–µ —á–∏—Å–ª–æ, –ø—Ä–æ–¥–µ–ª–∞–≤ –Ω–∞—à –∞–ª–≥–æ—Ä–∏—Ç–º 4 —Ä–∞–∑–∞! –ü–æ—ç—Ç–æ–º—É –¥–ª–∏–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏(–ø–æ—Ä—è–¥–æ–∫, –ª–∏–±–æ –ø–µ—Ä–∏–æ–¥) —Ä–∞–≤–µ–Ω 4

# –í —Ü–µ–ª–æ–º, —É–∑–Ω–∞—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–º –Ω–µ —Ç–∞–∫ —É–∂ –∏ –±—ã—Å—Ç—Ä–æ. –ï—Å–ª–∏ –∫–æ–Ω–µ—á–Ω–æ –º—ã —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –≤–æ –≤—Å–µ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞–µ–º –µ–¥–∏–Ω–∏—Ü—É, —Ç–æ —á–∏—Å–ª–æ –¢–û–ß–ù–û –Ω–µ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–µ. –ê –≤–¥—Ä—É–≥ –≤–∞–º –ø–æ–ø–∞–¥—ë—Ç—Å—è —á–∏—Å–ª–æ —Å –¥–ª–∏–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä 999. –≠—Ç–æ –∑–∞–º—É—á–∞—Ç—å—Å—è –Ω–∞–¥–æ, —á—Ç–æ–±—ã –¥–æ–π—Ç–∏ –¥–æ —Ç–∞–∫–æ–≥–æ.  
# 
# –ö–æ—Ä–æ—á–µ –≥–æ–≤–æ—Ä—è, –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞ –æ–±—Ä–∞–∑—É—é—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–∏ –ø—Ä–æ–¥–µ–ª—ã–≤–∞–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–µ–ª–∏—Ç–µ–ª—è–º–∏

# –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –≤—Å–µ—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª 2015 –≥–æ–¥ –ø–æ –¥–ª–∏–Ω–µ:

# In[ ]:


stat=np.array([(1,49),(2,1007478796),(4,1581),(5,1),(6,5),(8,4),(9,1),(28,1)])
pd.DataFrame(stat).rename(columns={0:"–î–ª–∏–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",1:"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–ø.—á–∏—Å–µ–ª"})


# –ê–ª–≥–æ—Ä—Ç–º—ã –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª.

# –ü–µ—Ä–≤—ã–π. –ú–æ–π. 

# In[ ]:


def SociableNumber(num,minIt=1,maxIt=20,sequence=False):
    num1=num
    iterat=0
    if(sequence):
        seq=[]
    while iterat<maxIt:
        iterat+=1
        if(sequence):
            seq.append(num)
        
        num = sum(Divisors(num))
        if(num==1):
            return False
        
        if(num1==num):
            if(iterat!=minIt):
                return False
            if(sequence):
                return (num,iterat,seq)
            else:
                return (num,iterat)


# –†–∞—Å—Å–∫–∞–∂—É –ø—Ä–æ –Ω–µ–≥–æ. –ù–∞ –≤—Ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ –º—ã –ø–æ–¥–∞—ë–º —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞—Ç–µ–º —É–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª–∏–Ω—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ –¥–≤—É—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, –∏ –≤ –∫–æ–Ω—Ü–µ —É–∫–∞–∑—ã–≤–∞–µ–º —Ö–æ—Ç–∏–º –ª–∏ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ "—á–∏—Å–ª–∞-–ø–æ—Å—Ä–µ–¥–Ω–∏–∫–∏".

# –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞ —á–∏—Å–ª–µ 4 –ø–µ—Ä–∏–æ–¥–∞

# In[ ]:


SociableNumber(1264460,1,sequence=True)


# In[ ]:


SociableNumber(1264460,2,sequence=True)


# In[ ]:


SociableNumber(1264460,3,sequence=True)


# In[ ]:


SociableNumber(1264460,4,sequence=True)


# –ò –º—ã –≤–∏–¥–∏–º, —á—Ç–æ —á–∏—Å–ª–æ 1264460 —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–º —á–∏—Å–ª–æ–º —Å –ø–µ—Ä–∏–æ–¥–æ–º 4  
# 
# –¢–∞–∫–∂–µ, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —è —Ä–µ—à–∏–ª –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Ä—è–¥ —á–∏—Å–µ–ª-–ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤. –í—Å—ë —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –≤–µ—Ä–Ω–æ!

# –¢–µ–ø–µ—Ä—å –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –∞–ª–≥–æ—Ä–∏—Ç–º, –∫–æ–≥–¥–∞ –º—ã –Ω–µ –∑–Ω–∞–µ–º –¥–ª–∏–Ω—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–≥–æ —á–∏—Å–ª–∞.

# In[ ]:


def _SociableNumber(num,sequence=False):
    num1=num
    iterat=0
    if(sequence):
        seq=[]
    while True:
        iterat+=1
        if(sequence):
            seq.append(num)
        
        num = sum(Divisors(num))
        if(num==1):
            return False
        
        if(num1==num):
            if(sequence):
                return (num,iterat,seq)
            else:
                return (num,iterat)


# In[ ]:


_SociableNumber(1264460)


# –ê–ª–≥–æ—Ä–∏—Ç–º —Å—Ä–∞–±–æ—Ç–∞–ª –≤–µ—Ä–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ.  
# –û–¥–Ω–∞–∫–æ –ø–æ—á–µ–º—É –≤–Ω–∞—á–∞–ª–µ —è –ø–æ–∫–∞–∑–∞–ª –Ω–µ —ç—Ç–æ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º, –∏ –ø–æ—á–µ–º—É —Ç–µ–∫—É—â–∏–π –Ω–µ –æ—Å–Ω–æ–≤–Ω–æ–π?  
# –î–µ–ª–æ –≤ —Ç–æ–º, —á—Ç–æ —á–∏—Å—Ç–æ –≥–∏–ø–æ—Ç–µ—Ç–∏—á–µ—Å–∫–∏ –º–æ–∂–Ω–æ –ø–æ–¥–∞—Ç—å —Ç–∞–∫–æ–µ —á–∏—Å–ª–æ, —á—Ç–æ –æ–Ω–æ –±—É–¥–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –∏—Å–∫–∞—Ç—å —ç—Ç–∏ —á–∏—Å–ª–∞. –¢–æ –µ—Å—Ç—å –ø–µ—Ä–∏–æ–¥ —Ä–∞–≤–µ–Ω –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏. –ü—Ä–∞–≤–¥–∞, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–µ —á–∏—Å–ª–æ? –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –Ω–æ –ø–æ–∫–∞ –º—ã –¥–æ –¥–æ–π–¥—ë–º –¥–æ –µ–¥–∏–Ω–∏—Ü—ã, —á—Ç–æ–±—ã –¥–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ–≥–æ-—Ç–æ, —á—Ç–æ —á–∏—Å–ª–æ –ù–ï –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–µ –ø—Ä–æ–π–¥—ë—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.   
# 
# –•–æ—Ç—è –º—ã –µ—â—ë —Å—Ä–∞–≤–Ω–∏–º –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤—Å–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã.   
# –¢–æ—á–Ω–µ–µ —É–∂–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–∞ —ç—Ç–æ—Ç —Å–ª—É—á–∞–π –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ **sympy** –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞–π—Ç–∏ –∏–ª–∏ —Ö–æ—Ç—è-–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–µ —á–∏—Å–ª–æ –ø–æ–º–∏–º–æ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ.

# In[ ]:


get_ipython().run_line_magic('timeit', 'SociableNumber(1264460,4,sequence=True)')


# In[ ]:


get_ipython().run_line_magic('timeit', '_SociableNumber(1264460)')


# –í –ø—Ä–∏–Ω—Ü–∏–ø–µ, —Ä–∞–∑–Ω–∏—Ü—ã —Å–æ–≤—Å–µ–º –Ω–µ—Ç, –Ω–æ –Ω–µ–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ –≤—ã—Ö–æ–¥–∏—Ç –º–µ—Ç–æ–¥, –∫–æ–≥–¥–∞ –º—ã —É–∂–µ –∑–Ω–∞–µ–º –ø–µ—Ä–∏–æ–¥ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–≥–æ —á–∏—Å–ª–∞.

# In[ ]:


InteractiveShell.ast_node_interactivity = "last_expr"


# In[ ]:


s = np.array([])
for i in range(1,10):
    start_time = time.time()
    _SociableNumber(i)
    end_time = (time.time() - start_time)
    s=np.append(s,end_time)


# In[ ]:


ss = np.array([])
for i in range(1,10):
    start_time = time.time()
    SociableNumber(i)
    end_time = (time.time() - start_time)
    ss=np.append(ss,end_time)


# –ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º

# In[ ]:


fig,ax=plt.subplots(1,2,figsize=(12,6))
ax[0].set_facecolor("#F2F2F2")
ax[0].grid()
ax[0].set_title("–ê–ª–≥–æ—Ä–∏—Ç–º 1")
ax[0].set_ylabel("–°–∫–æ—Ä–æ—Å—Ç—å, —Å–µ–∫")
ax[0].set_xlabel("–ò—Ç–µ—Ä–∞—Ü–∏—è")
ax[0].plot(s)
ax[1].set_facecolor("#F2F2F2")
ax[1].grid()
ax[1].set_title("–ê–ª–≥–æ—Ä–∏—Ç–º 2")
ax[1].set_ylabel("–°–∫–æ—Ä–æ—Å—Ç—å, —Å–µ–∫")
ax[1].set_xlabel("–ò—Ç–µ—Ä–∞—Ü–∏—è")
ax[1].plot(ss)


# –í–∏–∑—É–∞–ª—å–Ω–æ —è –¥–æ–∫–∞–∑–∞–ª –ø–æ—á–µ–º—É –∞–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–≥–æ —á–∏—Å–ª–∞

# –ê –¥–∞–≤–∞–π—Ç–µ —Å—Ä–∞–≤–Ω–∏–º —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º:
#     1. –ü–æ–∏—Å–∫ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª —Å –ø–µ—Ä–∏–æ–¥–æ–º 2
#     2. –ü–æ–∏—Å–∫ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞

# –°—É—Ç—å –≤ —Ç–æ–º, —á—Ç–æ –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ - —ç—Ç–æ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞, –Ω–æ –ø–µ—Ä–≤—ã–π - —ç—Ç–æ –Ω–æ–≤—ã–π —Ç–µ–∫—É—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª –≤ —Ü–µ–ª–æ–º, –∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–æ –∞–ª–≥–æ—Ä–∏—Ç–º –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç–∞—Ç—å–∏ –ø—Ä–æ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞

# In[ ]:


def AmicableNumber(k,returni=False):  
    allDels = dict()
    from itertools import chain
    concatenated = chain( range(k, int(k*1.6)+1 ),range(k, int(k/1.6)+1 ,-1) )
    for i in concatenated:
        if(str(i) not in allDels):
            allDels[str(i)] = Divisors(i)
        if(i != k and sum(allDels[str(i)]) == k and sum(allDels[str(k)]) == i):
            if(returni):
                return (k,i)
            else:
                print(k,"->",i)  


# In[ ]:


ss = np.array([])
for i in range(200,500):
    start_time = time.time()
    SociableNumber(i,2)
    end_time = (time.time() - start_time)
    ss=np.append(ss,end_time)


# In[ ]:


s = np.array([])
for i in range(200,500):
    start_time = time.time()
    AmicableNumber(i)
    end_time = (time.time() - start_time)
    s=np.append(s,end_time)


# In[ ]:


fig,ax=plt.subplots(1,2,figsize=(12,6))
ax[0].set_facecolor("#F2F2F2")
ax[0].grid()
ax[0].set_title("–ö–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥")
ax[0].set_ylabel("–°–∫–æ—Ä–æ—Å—Ç—å, —Å–µ–∫")
ax[0].set_xlabel("–ò—Ç–µ—Ä–∞—Ü–∏—è")
ax[0].plot(s)
ax[1].set_facecolor("#F2F2F2")
ax[1].grid()
ax[1].set_title("–î—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥")
ax[1].set_ylabel("–°–∫–æ—Ä–æ—Å—Ç—å, —Å–µ–∫")
ax[1].set_xlabel("–ò—Ç–µ—Ä–∞—Ü–∏—è")
ax[1].plot(ss)


# –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ï—Å–ª–∏ –º—ã –∏—â–µ–º –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞, —Ç–æ —á–µ–º –±–æ–ª—å—à–µ —á–∏—Å–ª–æ, —Ç–µ–º –ª–æ–≥–∏—á–Ω–æ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏. –ù–æ –µ—Å–ª–∏ –º—ã –∏—â–µ–º –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ, —Ç–æ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–¥—Ö–æ–¥ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–¥–µ–ª–∞–Ω–Ω—ã–π –¥–ª—è –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —á–∏—Å–µ–ª, –∞ –Ω–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–π—Ö —Å 2 –ø–µ—Ä–∏–æ–¥–æ–º.

# –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–µ–º —Å–¥–µ–ª–∞—Ç—å –≤–æ—Ç —á—Ç–æ. –ü–æ–ø—Ä–æ–±—É–µ–º –≤–∑—è—Ç—å –ø–µ—Ä–≤—ã–µ 26 000 —á–∏—Å–µ–ª. –ò–∑ –Ω–∏—Ö –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ –ø–æ—Ä—è–¥–∫–∞ –æ—Ç 1 –¥–æ 5.  
# –ú—ã –ø–æ–ª—É—á–∏–º —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å)

# In[ ]:


komp=[]
per=[]
for i in range(26000):
    for j in range(1,6):
        if(SociableNumber(i,j)):
            komp.append(i)
            per.append(j)
            break


# In[ ]:


len(komp)


# –¢–æ–ª—å–∫–æ 25 –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–ª–∞ –∏–∑ 26 000

# In[ ]:


fig,ax=plt.subplots(1,2,figsize=(12,6))
ax[0].set_facecolor("#F2F2F2")
ax[0].grid()
ax[0].set_title("–ö–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞")
ax[0].set_ylabel("–ß–∏—Å–ª–æ")
ax[0].set_xlabel("–ù–æ–º–µ—Ä —á–∏—Å–ª–∞")
ax[0].plot(komp)
ax[1].set_facecolor("#F2F2F2")
ax[1].grid()
ax[1].set_title("–ü–µ—Ä–∏–æ–¥—ã")
ax[1].set_ylabel("–ü–µ—Ä–∏–æ–¥")
ax[1].set_xlabel("–ù–æ–º–µ—Ä –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–≥–æ —á–∏—Å–ª–∞")
ax[1].plot(per)


# –ï—Å–ª–∏ –ø—Ä–µ–Ω–µ–±—Ä–µ—á—å –≤—Å–µ–º–∏ 26 000 —á–∏—Å–µ–ª –∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —Ç–æ —Ç–∞–∫–∏–µ –≥—Ä–∞—Ñ–∏–∫–∏ –ø–æ–ª—É—á–∞—é—Ç—Å—è –≤—ã—à–µ.  
# –ü–µ—Ä–≤–æ–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ä–∞—Å—Ç—É—Ç –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞. –ê –Ω–∞ –≤—Ç–æ—Ä–æ–º –≥—Ä–∞—Ñ–∏–∫–µ —É –Ω–∞—Å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø–µ—Ä–∏–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ —á–∏—Å–ª–∞–º –ø–µ—Ä–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞.  
# 
# –ü–æ–ø—Ä–æ–±—É–µ–º —É–∑–Ω–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª, –∞ —Ç–∞–∫–∂–µ —Å–¥–µ–ª–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä–∏–æ–¥–æ–≤ –∏ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª —Å—Ä–µ–¥–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –æ–±—ã—á–Ω—ã—Ö 26 000 —á–∏—Å–µ–ª.  
# –î–ª—è —ç—Ç–æ–≥–æ —è –º–æ–≥—É –ø—Ä–æ—Å—Ç–æ –≤–∑—è—Ç—å –≤—Å–µ —ç—Ç–∏ 26 000 —á–∏—Å–µ–ª. –ò –æ—Ç–º–µ—Ç–∏—Ç—å —Ç–æ—á–∫–∞–º–∏ —Ç–æ–ª—å–∫–æ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ

# In[ ]:


komp1=[]
komp2=[]
komp3=[]
komp4=[]
komp5=[]
kompa=[]
for i in range(26000):
    if(i in komp):
        kompa.append(1)
        
        if(per[komp.index(i)]==1):
            komp1.append(0.6)
        elif(per[komp.index(i)]==2):
            komp2.append(0.8)
        elif(per[komp.index(i)]==3):
            komp3.append(1)
        elif(per[komp.index(i)]==4):
            komp4.append(1.2)
        elif(per[komp.index(i)]==5):
            komp5.append(1.4)
        
        if(per[komp.index(i)]!=1):
            komp1.append(0)
        if(per[komp.index(i)]!=2):
            komp2.append(0)
        if(per[komp.index(i)]!=3):
            komp3.append(0)
        if(per[komp.index(i)]!=4):
            komp4.append(0)
        if(per[komp.index(i)]!=5):
            komp5.append(0)
    else:
        komp1.append(0)
        komp2.append(0)
        komp3.append(0)
        komp4.append(0)
        komp5.append(0)
        kompa.append(0)


# In[ ]:


fig,ax=plt.subplots(1,2,figsize=(12,6))
ax[0].set_ylim([0.5, 1.5])
ax[0].set_xlim([0, 20000])
ax[0].set_facecolor("#F2F2F2")
ax[0].grid()
ax[0].set_title("–ß–∞—Å—Ç–æ—Ç–∞ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–π —á–∏—Å–µ–ª")
ax[0].set_xlabel("–ß–∏—Å–ª–æ")
ax[0].set_ylabel("–ö–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–µ true,false")
ax[0].scatter(range(26000),kompa)
ax[1].set_ylim([0.5, 1.5])
ax[1].set_xlim([0, 20000])
ax[1].set_facecolor("#F2F2F2")
ax[1].grid()
ax[1].set_title("–ß–∞—Å—Ç–æ—Ç–∞ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–π —á–∏—Å–µ–ª —Å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–µ–π")
ax[1].set_xlabel("–ß–∏—Å–ª–æ")
ax[1].set_ylabel("–ö–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–µ true,false")
ax[1].scatter(range(26000),komp1)
ax[1].scatter(range(26000),komp2)
ax[1].scatter(range(26000),komp3)
ax[1].scatter(range(26000),komp4)
ax[1].scatter(range(26000),komp5)
ax[1].legend(["–ü–µ—Ä–∏–æ–¥ 1","–ü–µ—Ä–∏–æ–¥ 2","–ü–µ—Ä–∏–æ–¥ 3","–ü–µ—Ä–∏–æ–¥ 4","–ü–µ—Ä–∏–æ–¥ 5"])


# –ù–∞ –ø–µ—Ä–≤–æ–º –≥—Ä–∞—Ñ–∏–∫–µ –º—ã –≤–∏–¥–∏–º —Ç–æ—á–∫–∏ - —ç—Ç–æ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞. –ù–∞–π—Ç–∏ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å –≤ —á–∞—Å—Ç–æ—Ç–µ –Ω–µ –±—É–¥–µ—Ç –ª–µ–≥–∫–æ–π –∑–∞–¥–∞—á–µ–π, –Ω–æ –º—ã –º–æ–∂–µ–º –∏—Ö –ø—Ä–æ–∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∏ —É–∑–Ω–∞—Ç—å –∫ –∫–∞–∫–∏–º –ø–µ—Ä–∏–æ–¥–∞–º –æ–Ω–∏ –æ—Ç–Ω–æ—Å—è—Ç—Å—è.  
# –ß—Ç–æ –∏ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ –Ω–∞ –≤—Ç–æ—Ä–æ–º –≥—Ä–∞—Ñ–∏–∫–µ. –ò –º—ã –≤–∏–¥–∏–º, —á—Ç–æ —Ç–æ—á–µ–∫ –∑–µ–ª—ë–Ω–æ–≥–æ –∏ –∫—Ä–∞—Å–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –Ω–µ—Ç, –∞ –∑–Ω–∞—á–∏—Ç –≤ –ø–µ—Ä–≤—ã—Ö 26 000 —á–∏—Å–ª–∞—Ö –Ω–µ—Ç –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª 3 –∏ 4 –ø–µ—Ä–∏–æ–¥–∞.   
# –î–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —á–∏—Å–µ–ª.

# In[ ]:


import matplotlib.ticker as ticker
fig,ax=plt.subplots(1,2,figsize=(12,6))
for axis in [ax[0].xaxis, ax[0].yaxis]:
    axis.set_major_locator(ticker.MaxNLocator(integer=True))
ax[0].set_facecolor("#F2F2F2")
ax[0].set_title("–ü–µ—Ä–∏–æ–¥—ã –≤ –ø–µ—Ä–≤—ã—Ö 26 000 —á–∏—Å–ª–∞—Ö")
ax[0].set_xlabel("–ü–µ—Ä–∏–æ–¥")
ax[0].set_ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
ax[0].hist(per,bins=5)
plt.pie([per.count(1),per.count(2),per.count(3),per.count(4),per.count(5)], 
        colors=["red","yellow","blue","#E7AFFF","#A7FF5B"],
        labels=["1 –ø–µ—Ä–∏–æ–¥","2 –ø–µ—Ä–∏–æ–¥","3 –ø–µ—Ä–∏–æ–¥","4 –ø–µ—Ä–∏–æ–¥","5 –ø–µ—Ä–∏–æ–¥"], 
        autopct='%1.1f%%',
        shadow=True,
        textprops={'color':"black"})
plt.legend([per.count(1),per.count(2),per.count(3),per.count(4),per.count(5)])
("")


# –ù—É, –∞ —ç—Ç–æ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª –ø–æ –ø–µ—Ä–∏–æ–¥—É –±–æ–ª–µ–µ –Ω–∞–≥–ª—è–¥–Ω–æ.

# –ê —è –∫—Å—Ç–∞—Ç–∏ —Ç–∞–∫ –∏ –Ω–µ –ø–æ–∫–∞–∑–∞–ª —Å–∞–º —Ä—è–¥ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª. –ü–µ—Ä–≤—ã–µ 25 —á–∏—Å–µ–ª.

# In[ ]:


for i in komp:
    print(i,end=", ")


# ### –ê–Ω–∞–ª–∏–∑

# –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—è–¥. –ù–∞–π–¥—ë–º —Å–∫–æ—Ä–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä—è–¥–∞, —É—Å–∫–æ—Ä–µ–Ω–∏–µ. –ó–∞—Ç–µ–º –ø—Ä–æ–¥–µ–ª–∞–µ–º —Ç–æ–∂–µ —Å–∞–º–æ–µ —Å –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏ –º–µ–∂–¥—É —á–∏—Å–ª–∞–º–∏ –∏ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å—é.

# In[ ]:


dkomp=[komp[i]-komp[i-1] for i in range(1,len(komp))]
ddkomp=[dkomp[i]-dkomp[i-1] for i in range(1,len(dkomp))]


# In[ ]:


fig,ax=plt.subplots(1,2,figsize=(12,6))
ax[0].set_facecolor("#F2F2F2")
ax[0].grid()
ax[0].set_title("–°–∫–æ—Ä–æ—Å—Ç—å —Ä—è–¥–∞")
ax[0].plot(dkomp)
ax[1].set_facecolor("#F2F2F2")
ax[1].grid()
ax[1].set_title("–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä—è–¥–∞")
ax[1].plot(ddkomp)


# –î–∞, –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤—ã–≤–æ–¥, —á—Ç–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä–µ—á–∏ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–æ–≥–æ —á–∏—Å–ª–∞ —Ä–∞—Å—Ç—ë—Ç —Å –µ–≥–æ —Ä–æ—Å—Ç–æ–º, –Ω–æ –ø—Ä–æ —É—Å–∫–æ—Ä–µ–Ω–∏–µ —á—Ç–æ-–ª–∏–±–æ —Å–∫–∞–∑–∞—Ç—å —Å–ª–æ–∂–Ω–æ. –í–∏–¥–Ω–æ, —á—Ç–æ –µ—Å—Ç—å –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å. –ö —Ç–æ–º—É –∂–µ, –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞ –≤–∫–ª—é—á–∞—é—Ç –≤ —Å–µ–±—è —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã, –Ω–æ –ø–µ—Ä–≤—ã–µ 25 —á–∏—Å–µ–ª —Ç–æ–ª—å–∫–æ 1,2 –∏ 5 –ø–µ—Ä–∏–æ–¥—ã.

# #### –û—Ç–Ω–æ—à–µ–Ω–∏—è

# In[ ]:


rkomp=[komp[i]/komp[i-1] for i in range(1,len(komp))]


# In[ ]:


np.mean(rkomp) # –°—Ä–µ–¥–Ω–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ


# In[ ]:


drawPlot(rkomp,title="–û—Ç–Ω–æ—à–µ–Ω–∏—è –º–µ–∂–¥—É –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–º–∏ —á–∏—Å–ª–∞–º–∏",y="–û—Ç–Ω–æ—à–µ–Ω–∏–µ",x="–ß–∏—Å–ª–æ")


# –í–∞—É! –Ø —ç—Ç–æ–≥–æ –Ω–µ –æ–∂–∏–¥–∞–ª! –ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Ä—è–¥ –æ—Ç–Ω–æ—à–µ–Ω–∏–π —Å—Ö–æ–¥–∏—Ç—Å—è –∫ –∫–∞–∫–æ–º—É-—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—é. –ú–æ–≥—É —Å–ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É–∂–µ –Ω–∞—á–∏–Ω–∞—è —Å 30-–æ–≥–æ —á–∏—Å–ª–∞, (–Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ).  
# –î–ª—è —ç—Ç–æ–≥–æ –±—ã–ª–æ –±—ã –ø–æ–ª–µ–∑–Ω–æ —É–∑–Ω–∞—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —É—Å–∫–æ—Ä–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ —Ä—è–¥–∞.

# In[ ]:


drkomp=[rkomp[i]-rkomp[i-1] for i in range(1,len(rkomp))]
ddrkomp=[drkomp[i]-drkomp[i-1] for i in range(1,len(drkomp))]


# In[ ]:


fig,ax=plt.subplots(1,2,figsize=(12,6))
ax[0].set_facecolor("#F2F2F2")
ax[0].grid()
ax[0].set_title("–°–∫–æ—Ä–æ—Å—Ç—å —Ä—è–¥–∞")
ax[0].plot(drkomp)
ax[1].set_facecolor("#F2F2F2")
ax[1].grid()
ax[1].set_title("–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä—è–¥–∞")
ax[1].plot(ddrkomp)


# üòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòçüòç

# –ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!!!  
# 
# –°–∫–æ—Ä–æ—Å—Ç—å –∏ —É—Å–∫–æ—Ä–µ–Ω–∏—è —Å—Ö–æ–∂–∏, –∞ —Ç–∞–∫ –∂–µ –æ–±–∞ –≥—Ä–∞—Ñ–∏–∫–∞ —Å—Ö–æ–¥—è—Ç—Å—è. –≠—Ç–∏–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤—ã–≤–æ–¥, —á—Ç–æ –º—ã —Å–º–æ–∂–µ–º –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞ –ø–æ —Ñ–æ—Ä–º—É–ª–µ, –µ—Å–ª–∏ —É–∑–Ω–∞–µ–º —Ç–æ—á–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —á–∏—Å–µ–ª.

# #### –ü–ª–æ—Ç–Ω–æ—Å—Ç—å

# –ö–∞–∫ –∏ –≤ –ø—Ä–æ—à–ª—ã—Ö —Å—Ç–∞—Ç—å—è—Ö, –º—ã –∏—Å—Å–ª–µ–¥—É–µ–º –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞ –Ω–∞ —Å–≤–æ–π—Å—Ç–≤–æ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏. –£–∑–Ω–∞–µ–º —Ç–∞–∫–∂–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —É—Å–∫–æ—Ä–µ–Ω–∏–µ –ø–ª–æ—Ç–Ω–æ—Å—Ç–µ–π.

# In[ ]:


densities=[(len(list(filter(lambda x: x < i, sorted(komp))))-1)/i for i in range(200,10000)]
drawPlot(densities,"–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏","–ü–ª–æ—Ç–Ω–æ—Å—Ç—å","–î—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ")


# –ü–ª–æ—Ç–Ω–æ—Å—Ç—å –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º. –ú–æ–∂–Ω–æ –¥–∞–∂–µ –≤—ã—è–≤–∏—Ç—å —Ç—Ä–µ–Ω–¥, –∏ –ø–æ–Ω—è—Ç—å —á—Ç–æ –∑–∞ —Ñ—É–Ω–∫—Ü–∏—è.
# 
# –§—É–Ω–∫—Ü–∏—è $ {f(x)}={{1}\over{x}} , x \in (0,\inf) $

# In[ ]:


ddensities=[densities[i]-densities[i-1] for i in range(1,len(densities))]
ddensities=[ddensities[i]-ddensities[i-1] for i in range(1,len(ddensities))]


# In[ ]:


fig,ax=plt.subplots(1,2,figsize=(12,6))
ax[0].set_facecolor("#F2F2F2")
ax[0].grid()
ax[0].set_title("–°–∫–æ—Ä–æ—Å—Ç—å –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏")
ax[0].plot(densities)
ax[1].set_facecolor("#F2F2F2")
ax[1].grid()
ax[1].set_title("–£—Å–∫–æ—Ä–µ–Ω–∏–µ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏")
ax[1].plot(ddensities)


# –°—É–ø–µ—Ä –∑—Ä–µ–ª–∏—â–µ! –Ø –µ—â—ë —Ä–∞–∑ —É–±–µ–¥–∏–ª—Å—è, —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞.   
# –ê –¥–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º?

# In[ ]:


def findSociableNumbers(countt):
    komp=[]
    per=[]
    i=0
    while len(komp)<countt:
        i+=1
        for j in range(1,6):
            if(SociableNumber(i,j)):
                komp.append(i)
                per.append(j)
                break
    return (komp,per)
            
komp=findSociableNumbers(30)[0]


# In[ ]:


rkomp=[komp[i]/komp[i-1] for i in range(1,len(komp))]


# In[ ]:


drawPlot(rkomp,title="–û—Ç–Ω–æ—à–µ–Ω–∏—è –º–µ–∂–¥—É –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–º–∏ —á–∏—Å–ª–∞–º–∏",y="–û—Ç–Ω–æ—à–µ–Ω–∏–µ",x="–ß–∏—Å–ª–æ")


# –£–ø—Å. –ê –≤–æ—Ç –≤—Ä–æ–¥–µ –≤—Å—ë —Å—Ö–æ–¥–∏–ª–æ—Å—å, –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–∑–∫–æ –ø–æ–¥–Ω—è–ª–æ—Å—å –∑–Ω–∞—á–µ–Ω–∏–µ.  –ü–ª–∞–Ω –ø—Ä–æ–≤–∞–ª–µ–Ω, –æ–¥–Ω–∞–∫–æ...  
# –ù–∞–π–¥—ë–º –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª

# In[ ]:


ratio=rkomp[-1]
ratio


# –ê —Ç–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ–ø—Ä–æ–±—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏–µ —á–∏—Å–ª–∞

# In[ ]:


gkomp=komp.copy()
i=0
while i<570:
    gkomp.append(int(ratio*gkomp[-1]))
    i+=1
gkomp


# –°–∫–æ–ª—å–∫–æ –∏–∑ –Ω–∏—Ö –Ω–∞—Å—Ç–æ—è—â–∏—Ö –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Ç–æ–ª—å–∫–æ, –µ—Å–ª–∏ –º—ã —Å—Ä–∞–≤–Ω–∏–º —Å —É–∂–µ —Ç–æ—á–Ω–æ –∏–∑–≤–µ—Å—Ç–Ω—ã–º —Ä—è–¥–æ–º. –ó–¥–µ—Å—å –ø–æ–∫–∞–∑–∞–Ω–æ 600 —á–∏—Å–µ–ª

# ## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

# In[ ]:


len(komp)


# –ó–∞ 12 –º–∏–Ω—É—Ç —è –Ω–∞—à—ë–ª 30 –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª

# –ê —Å–∞–º–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ, –±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ - 69615

# In[ ]:


EvenSociable=[i for i in komp if(i%2==0)]
len(EvenSociable)


# In[ ]:


plt.pie([len(EvenSociable),30-len(EvenSociable)], 
        colors=["#A7FF5B","#E7AFFF"],
        labels=["–ß—ë—Ç–Ω—ã–µ","–ù–µ—á—ë—Ç–Ω—ã–µ"], 
        autopct='%1.1f%%',
        shadow=True,
        textprops={'color':"black"})
plt.legend([len(EvenSociable),30-len(EvenSociable)])
("")


# –ò–∑ 30 —á–∏—Å–µ–ª —Ç–æ–ª—å–∫–æ 4 –Ω–µ—á—ë—Ç–Ω—ã–µ!

# –ò—Å—Å–ª–µ–¥—É–µ–º —Ç–µ–ø–µ—Ä—å –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç—É!

# In[ ]:


def _isPrime(n):
    if n%2==0:
        return n==2
    d=3
    while d*d<=n and n%d!=0:
        d+=2
    return d*d>n   


# In[ ]:


PrimeSociable=[i for i in komp if(_isPrime(i))]
plt.pie([len(PrimeSociable),30-len(PrimeSociable)], 
        colors=["#A7FF5B","#E7AFFF"],
        labels=["–°–æ—Å—Ç–∞–≤–Ω—ã–µ","–ü—Ä–æ—Å—Ç—ã–µ"], 
        autopct='%1.1f%%',
        shadow=True,
        textprops={'color':"black"})
plt.legend([len(PrimeSociable),30-len(PrimeSociable)])
("")


# –ö–∞–∫ –∏ –≤ —Å–ª—É—á–∞–µ —Å –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏, –∑–¥–µ—Å—å —Ç–æ–∂–µ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç–æ–≥–æ!

# ## –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è

# –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —Å–ø–∏—Ä–∞–ª–∏ —Å–æ —Å—Ä–µ–¥–Ω–∏–º –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º —É–≥–ª–æ–º –≤ —Ä—è–¥—É –∏–∑ 30 –∫–æ–º–ø–∞–Ω–µ–π—Å–∫–∏—Ö —á–∏—Å–µ–ª

# In[ ]:


ratio=[komp[i]/komp[i-1] for i in range(1,len(komp))]


# In[ ]:


ratio[-1]


# In[ ]:


np.mean(ratio)


# In[ ]:


angle=sp.N(360/np.mean(ratio)**2)
angle


# In[ ]:


#–°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç–∏–Ω–∫—É 300—Ö300

N=300
t = turtle.Turtle(fixed=False, width=N, height=N)
t.hideturtle()
t


# In[ ]:


for i in range(15):
    for j in range(int(angle)): 
        t.forward(i/10) 
        t.left(1)
        if(i>10):
            time.sleep(0.01) # –ß—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å —Ä–∏—Å—É–Ω–æ–∫


# In[ ]:


angle=sp.N(360/ratio[-1]**2)
angle


# In[ ]:


#–°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç–∏–Ω–∫—É 300—Ö300

N=300
t = turtle.Turtle(fixed=False, width=N, height=N)
t.hideturtle()
t


# In[ ]:


for i in range(15):
    for j in range(int(angle)): 
        t.forward(i/10) 
        t.left(1)
        if(i>10):
            time.sleep(0.01) # –ß—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å —Ä–∏—Å—É–Ω–æ–∫


# # –ö–æ–Ω–µ—Ü  
# 
# –ù–∞ —ç—Ç–æ–º –≤—Å—ë, –¥–æ—Ä–æ–≥–∏–µ —á–∏—Ç–∞—Ç–µ–ª–∏!  
# –ù–∞–¥–µ—é—Å—å –≤–∞–º –±—ã–ª–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ —Ç–∞–∫–æ–≥–æ –∏–∑ –∑–∞–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ üòç
# 
# –°–ª–µ–¥—É—é—â–∞—è —Å—Ç–∞—Ç—å—è —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ø—Ä–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ —á–∏—Å–µ–ª. –ë—É–¥–µ—Ç –±–æ–ª—å—à–∞—è —Å—Ç–∞—Ç—å—è. –î–∞–∂–µ –æ—á–µ–Ω—å. –ö —Ç–æ–º—É –∂–µ, —É –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–µ–∫—Ç–æ–≤, –ø–æ—ç—Ç–æ–º—É —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç–∞—Ç—å—è –±—É–¥–µ—Ç —Å–æ–≤—Å–µ–º –Ω–µ —Å–∫–æ—Ä–æ, –Ω–æ –±—É–¥–µ—Ç!